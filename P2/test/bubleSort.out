Illegal character< ident, include >< comp, < >< ident, stdio >Illegal character< ident, h >< comp, > >

< void >< ident, main >< parenth, ( >< parenth, ) >
< brace, { >
< const >< int >< ident, n >< assign >< number, 10 >< semicolon >
< int >< ident, a >< bracket, [ >< number, 10 >< bracket, ] >< assign >< brace, { >< number, 10 >< comma >< number, 7 >< comma >< number, 5 >< comma >< number, 100 >< comma >< number, 1 >< comma >< number, 7 >< comma >< number, 67 >< comma >< number, 4 >< comma >< number, 99 >< comma >< number, 6 >< brace, } >< semicolon >
< int >< ident, i >< assign >< number, 0 >< semicolon >

< ident, printf >< parenth, ( >Illegal character< ident, origin >< ident, array >Illegal characterIllegal character< ident, n >Illegal character< parenth, ) >< semicolon >
< while >< parenth, ( >< ident, i >< comp, <= >< ident, n >< op, - >< number, 1 >< parenth, ) >
< brace, { >
< ident, printf >< parenth, ( >Illegal character< op, % >< ident, d >Illegal character< comma >< ident, a >< bracket, [ >< ident, i >< bracket, ] >< parenth, ) >< semicolon >
< ident, i >< assign >< ident, i >< op, + >< number, 1 >< semicolon >
< brace, } >
< ident, printf >< parenth, ( >Illegal characterIllegal character< ident, n >Illegal character< parenth, ) >< semicolon >

< ident, i >< assign >< number, 0 >< semicolon >
< while >< parenth, ( >< ident, i >< comp, < >< ident, n >< op, - >< number, 1 >< parenth, ) >
< brace, { >
< int >< ident, j >< assign >< number, 0 >< semicolon >
< while >< parenth, ( >< ident, j >< comp, < >< ident, n >< op, - >< number, 1 >< op, - >< ident, i >< parenth, ) >
< brace, { >
< if >< parenth, ( >< ident, a >< bracket, [ >< ident, j >< op, + >< number, 1 >< bracket, ] >< comp, < >< ident, a >< bracket, [ >< ident, j >< bracket, ] >< parenth, ) >
< brace, { >
< int >< ident, t >< assign >< ident, a >< bracket, [ >< ident, j >< bracket, ] >< semicolon >
< ident, a >< bracket, [ >< ident, j >< bracket, ] >< assign >< ident, a >< bracket, [ >< ident, j >< op, + >< number, 1 >< bracket, ] >< semicolon >
< ident, a >< bracket, [ >< ident, j >< op, + >< number, 1 >< bracket, ] >< assign >< ident, t >< semicolon >
< brace, } >
< ident, j >< assign >< ident, j >< op, + >< number, 1 >< semicolon >
< brace, } >
< ident, i >< assign >< ident, i >< op, + >< number, 1 >< semicolon >
< brace, } >
< int >< ident, flag >< assign >< number, 1 >< semicolon >
< ident, i >< assign >< number, 0 >< semicolon >
< while >< parenth, ( >< ident, i >< comp, < >< ident, n >< op, - >< number, 1 >< parenth, ) >
< brace, { >
< if >< parenth, ( >< ident, a >< bracket, [ >< ident, i >< bracket, ] >< comp, > >< ident, a >< bracket, [ >< ident, i >< op, + >< number, 1 >< bracket, ] >< parenth, ) >< ident, flag >< assign >< number, 0 >< semicolon >
< ident, i >< assign >< ident, i >< op, + >< number, 1 >< semicolon >
< brace, } >

< ident, i >< assign >< number, 0 >< semicolon >
< op, / >< op, / >< ident, the >< ident, next >< ident, part >< ident, will >< ident, violate >< ident, c1 >
< ident, printf >< parenth, ( >Illegal character< ident, Array >< ident, after >< ident, sorted >Illegal characterIllegal character< ident, n >Illegal character< parenth, ) >< semicolon >
< while >< parenth, ( >< ident, i >< comp, <= >< ident, n >< op, - >< number, 1 >< parenth, ) >
< brace, { >
< ident, printf >< parenth, ( >Illegal character< op, % >< ident, d >Illegal character< comma >< ident, a >< bracket, [ >< ident, i >< bracket, ] >< parenth, ) >< semicolon >
< ident, i >< assign >< ident, i >< op, + >< number, 1 >< semicolon >
< brace, } >
< ident, printf >< parenth, ( >Illegal characterIllegal character< ident, nflag >< assign >< op, % >< ident, d >Illegal character< ident, n >Illegal character< comma >< ident, flag >< parenth, ) >< semicolon >
< brace, } >