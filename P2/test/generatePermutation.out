Illegal character< ident, include >< comp, < >< ident, stdio >Illegal character< ident, h >< comp, > >

< const >< int >< ident, n >< assign >< number, 4 >< semicolon >
< int >< ident, a >< bracket, [ >< number, 6 >< bracket, ] >< comma >< ident, vis >< bracket, [ >< number, 6 >< bracket, ] >< semicolon >
< int >< ident, now >< assign >< number, 0 >< semicolon >

< void >< ident, findPermutation >< parenth, ( >< parenth, ) >
< brace, { >
< if >< parenth, ( >< ident, now >< comp, == >< ident, n >< parenth, ) >
< brace, { >
< int >< ident, i >< assign >< number, 1 >< semicolon >
< while >< parenth, ( >< ident, i >< comp, <= >< ident, n >< parenth, ) >
< brace, { >
< ident, printf >< parenth, ( >Illegal character< op, % >< ident, d >Illegal character< comma >< ident, a >< bracket, [ >< ident, i >< bracket, ] >< parenth, ) >< semicolon >
< ident, i >< assign >< ident, i >< op, + >< number, 1 >< semicolon >
< brace, } >
< ident, printf >< parenth, ( >Illegal characterIllegal character< ident, n >Illegal character< parenth, ) >< semicolon >
< brace, } >< else >
< brace, { >
< int >< ident, i >< assign >< number, 1 >< semicolon >
< while >< parenth, ( >< ident, i >< comp, <= >< ident, n >< parenth, ) >
< brace, { >
< if >< parenth, ( >< ident, vis >< bracket, [ >< ident, i >< bracket, ] >< comp, == >< number, 0 >< parenth, ) >
< brace, { >
< ident, vis >< bracket, [ >< ident, i >< bracket, ] >< assign >< number, 1 >< semicolon >
< ident, now >< assign >< ident, now >< op, + >< number, 1 >< semicolon >
< ident, a >< bracket, [ >< ident, now >< bracket, ] >< assign >< ident, i >< semicolon >
< ident, findPermutation >< parenth, ( >< parenth, ) >< semicolon >
< ident, now >< assign >< ident, now >< op, - >< number, 1 >< semicolon >
< ident, vis >< bracket, [ >< ident, i >< bracket, ] >< assign >< number, 0 >< semicolon >
< brace, } >
< ident, i >< assign >< ident, i >< op, + >< number, 1 >< semicolon >
< brace, } >
< brace, } >
< brace, } >

< void >< ident, main >< parenth, ( >< parenth, ) >
< brace, { >
< ident, printf >< parenth, ( >Illegal character< op, % >< ident, d >< ident, Permutation >Illegal characterIllegal character< ident, n >Illegal character< comma >< ident, n >< parenth, ) >< semicolon >
< ident, findPermutation >< parenth, ( >< parenth, ) >< semicolon >
< brace, } >